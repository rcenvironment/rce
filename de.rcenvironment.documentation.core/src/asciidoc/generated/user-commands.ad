*The 'auth' command [[auth]]*
|===
|Command |Description

|auth|Alias for "auth list".
|auth create <group id>|Creates a new authorization group.  +

 _<group id>_:  an identifier consisting of 2-32 letters, numbers, underscores ("_") and/or brackets  +

|auth delete <group id>|Deletes a local authorization group.  +

 _<group id>_:  an identifier consisting of 2-32 letters, numbers, underscores ("_") and/or brackets  +

|auth export <group id>|Exports a group as an invitation string that can be imported by another node, allowing that other node to join this group.  +

 _<group id>_:  an identifier consisting of 2-32 letters, numbers, underscores ("_") and/or brackets  +

|auth import <invitation string>|Imports a group from an invitation string that was previously exported on another node.  +

 _<invitation string>_:  imports a group from an invitation string that was previously exported on another node  +

|auth list|Lists the authorization groups that the local node belongs too.
|===
*The 'cn' command [[cn]]*
|===
|Command |Description

|cn|Alias for "cn list".
|cn add <target> <description>|Add a new network connection (Example: cn add activemq-tcp:rceserver.example.com:20001 "Our RCE Server").  +

 _<target>_:  target of the connection  +
 _<description>_:  description of the connection  +

|cn list|Lists all network connections, including ids and connection states.
|cn start <id>|Starts/connects a READY or DISCONNECTED connection (use "cn list" to get the id).  +

 _<id>_:  id of the connection  +

|cn stop <id>|Stops/disconnects an ESTABLISHED connection (use "cn list" to get the id).  +

 _<id>_:  id of the connection  +

|===
*The 'components' command [[components]]*
|===
|Command |Description

|components [--local\|-l] [--remote\|-r] [--as-table\|-t]|Alias for "components list".  +

 _[--local\|-l]_:  only list components provided by the local node  +
 _[--remote\|-r]_:  only list components provided by the remote node(s)  +
 _[--as-table\|-t]_:  format the output as a table that is especially suited for automated parsing  +

|components list [--local\|-l] [--remote\|-r] [--as-table\|-t]|Show available components; by default, components on the local node as well as those published by a reachable remote node are listed.  +

 _[--local\|-l]_:  only list components provided by the local node  +
 _[--remote\|-r]_:  only list components provided by the remote node(s)  +
 _[--as-table\|-t]_:  format the output as a table that is especially suited for automated parsing  +

|components list-auth|Shows a list of all defined authorization settings. Note that these settings are independent of whether a matching component exists, which means that settings are kept when a component is removed and later added again.
|components set-auth <component id> <groups...>|Assigns a list of authorization groups to a component id; note that authorization settings always apply to all components with using this id, regardless of the component's version.  +

 _<component id>_:  A component's id as listed by the "components list" command, e.g. "rce/Parametric Study", "common/MyIntegratedTool", or "cpacs/MyCpacsTool".   +
 _<groups...>_:  list of authorization groups  +

|components show <component id>|Show component definition.  +

 _<component id>_:  A component's id as listed by the "components list" command, e.g. "rce/Parametric Study", "common/MyIntegratedTool", or "cpacs/MyCpacsTool".   +

|===
*The 'explain' command [[explain]]*
|===
|Command |Description

|explain|Show tokens.
|===
*The 'help' command [[help]]*
|===
|Command |Description

|help <command group> [--details\|-d] [--dev] [--asciidoc]|List available commands.  +

 _<command group>_:  (optional) the command group of which the commands should be shown  +
 _[--details\|-d]_:  show details of the commands  +
 _[--dev]_:  show dev commands  +
 _[--asciidoc]_:  output in asciidoc format  +

|===
*The 'keytool' command [[keytool]]*
|===
|Command |Description

|keytool ssh-pw|Generates a password for an SSH or Uplink connection, and the corresponding server entry.
|keytool uplink-pw|Generates a password for an SSH or Uplink connection, and the corresponding server entry.
|===
*The 'mail' command [[mail]]*
|===
|Command |Description

|mail <recipient> <subject> <body>|Send an email.  +

 _<recipient>_:  recipient of the e-mail  +
 _<subject>_:  subject of the e-mail  +
 _<body>_:  body of the e-mail  +

|===
*The 'net' command [[net]]*
|===
|Command |Description

|net|Alias for 'net info'.
|net filter|Show IP filter status.
|net info|Show a list of reachable RCE nodes.
|net reload-filter|Reloads the IP filter configuration.
|===
*The 'ra-admin' command [[ra-admin]]*
|===
|Command |Description

|ra-admin list-wfs|Lists the ids of all published workflows.
|ra-admin publish-wf <workflow file> <workflow id> [-g <group name>] [-p <JSON placeholder file>] [--keep-data\|-k] [--temporary\|-t]|Publishes a workflow file for remote execution via "ra run-wf" using <id>.  +

 _<workflow file>_:  the file of the workflow  +
 _<workflow id>_:  id of the workflow  +
 _[-g <group name>]_:  set group name  +
 _[-p <JSON placeholder file>]_:  JSON placeholder file  +
 _[--keep-data\|-k]_:  workflow data will not be deleted  +
 _[--temporary\|-t]_:  automatically unpublish when RCE shuts down  +

|ra-admin unpublish-wf <workflow id>|Unpublishes (removes) the workflow file with id <id> from remote execution.  +

 _<workflow id>_:  id of the workflow  +

|===
*The 'restart' command [[restart]]*
|===
|Command |Description

|restart|Restart RCE.
|===
*The 'saveto' command [[saveto]]*
|===
|Command |Description

|saveto <output file> <command>|Save the command output to a file.  +

 _<output file>_:  file to which the output will be written  +
 _<command>_:  command whos output will be saved, does not have to be surounded by quotation marks  +

|===
*The 'shutdown' command [[shutdown]]*
|===
|Command |Description

|shutdown|Shut down RCE.
|===
*The 'ssh' command [[ssh]]*
|===
|Command |Description

|ssh|Short form of "ssh list".
|ssh add <display name> <host> <port> <username> <key file location>|Add a new ssh connection.  +

 _<display name>_:  display name for the ssh connection  +
 _<host>_:  host for the ssh connection  +
 _<port>_:  port for the ssh connection  +
 _<username>_:  username for the ssh connection  +
 _<key file location>_:  location of the key file  +

|ssh list|Lists all ssh connections, including ids and connection states.
|ssh start <id>|Starts/connects an ssh connection (use " ssh list" to get the id).  +

 _<id>_:  id for the ssh connection  +

|ssh stop <id>|Stops/disconnects an ssh connection (use " ssh list" to get the id).  +

 _<id>_:  id for the ssh connection  +

|===
*The 'stop' command [[stop]]*
|===
|Command |Description

|stop|Shut down RCE (alias of "shutdown").
|===
*The 'sysmon' command [[sysmon]]*
|===
|Command |Description

|sysmon [--local\|-l] [--remote\|-r]|Basic system-monitoring information.  +

 _[--local\|-l]_:  prints system monitoring data for the local instance  +
 _[--remote\|-r]_:  fetches system monitoring data from all reachable nodes in the network, and prints it in a human-readable format  +

|sysmon api <operation: default\|avgcpu+ram> <time span> <time limit>|Fetches system monitoring data from all reachable nodes in the network,and prints it in a parser-friendly format.  +

 _<operation: default\|avgcpu+ram>_:  operation to perform; avgcpu+ram: fetches the average CPU load over the given time span and the current free RAM  +
 _<time span>_:  the maximum time span (in seconds) to aggregate load data over  +
 _<time limit>_:  the maximum time (in milliseconds) to wait for each node's load data response  +

|sysmon remote|Fetches system monitoring data from all reachable nodes in the network, and prints it in a human-readable format.
|===
*The 'uplink' command [[uplink]]*
|===
|Command |Description

|uplink|Short form for "uplink list".
|uplink add <display name> <host> <port> <username> <key file location> <client id> <is gateway>|Add a new uplink connection.  +

 _<display name>_:  display name  +
 _<host>_:  host ip adress  +
 _<port>_:  port for the ssh connection  +
 _<username>_:  username  +
 _<key file location>_:  location of the keyfile  +
 _<client id>_:  id of the client  +
 _<is gateway>_:  controls the isGateway property of the uplink  +

|uplink list|Lists all uplink connections, including ids and connection states.
|uplink start <id>|Starts/connects an uplink connection (use " uplink list" to get the id).  +

 _<id>_:  id of the uplink  +

|uplink stop <id>|Stops/disconnects an uplink connection (use " uplink list" to get the id).  +

 _<id>_:  id of the uplink  +

|===
*The 'version' command [[version]]*
|===
|Command |Description

|version [--detailed\|-d]|Print version information.  +

 _[--detailed\|-d]_:  Show detailed information about the version  +

|===
*The 'wf' command [[wf]]*
|===
|Command |Description

|wf|Alias for "wf list".
|wf cancel <id>|Cancel a running or paused workflow.  +

 _<id>_:  id of the workflow  +

|wf delete <id>|Delete and dispose a finished, cancelled or failed workflow.  +

 _<id>_:  id of the workflow  +

|wf details <id>|Show details of a workflow.  +

 _<id>_:  id of the workflow  +

|wf dispose <id>|Disposes a finished, cancelled or failed workflow.  +

 _<id>_:  id of the workflow  +

|wf list|Show workflow list.
|wf open <id>|Open a runtime viewer of a workflow. Requires GUI.  +

 _<id>_:  id of the workflow  +

|wf pause <id>|Pause a running workflow.  +

 _<id>_:  id of the workflow  +

|wf resume <id>|Resume a paused workflow.  +

 _<id>_:  id of the workflow  +

|wf run <workflow file> [--delete <onfinished\|never\|always>] [--dispose <onfinished\|never\|always>] [-p <JSON placholder file>] [--compact-output\|-c]|Starts a workflow from the given file and waits for its completion.  +

 _<workflow file>_:  path to the workflow file  +
 _[--delete <onfinished\|never\|always>]_:  deletion behaviour  +
 _[--dispose <onfinished\|never\|always>]_:  dispose behaviour  +
 _[-p <JSON placholder file>]_:  JSON placeholder file  +
 _[--compact-output\|-c]_:  This is a command flag  +

|wf start <workflow file> [--delete <onfinished\|never\|always>] [--dispose <onfinished\|never\|always>] [-p <JSON placholder file>] [--compact-output\|-c]|Starts a workflow from the given file and returns its workflow id if validation passed.  +

 _<workflow file>_:  path to the workflow file  +
 _[--delete <onfinished\|never\|always>]_:  deletion behaviour  +
 _[--dispose <onfinished\|never\|always>]_:  dispose behaviour  +
 _[-p <JSON placholder file>]_:  JSON placeholder file  +
 _[--compact-output\|-c]_:  This is a command flag  +

|wf verify <workflows...> [--delete <onfinished\|never\|always>] [--dispose <onfinished\|never\|always>] [--pr <parallel runs>] [--sr <sequential runs>] [-p <JSON placholder file>] [--basedir <base directory>] [--includedirs <include directory...>]|Batch test the specified workflow files.  +

 _<workflows...>_:  list of workflow files  +
 _[--delete <onfinished\|never\|always>]_:  deletion behaviour  +
 _[--dispose <onfinished\|never\|always>]_:  dispose behaviour  +
 _[--pr <parallel runs>]_:  number of parallel runs  +
 _[--sr <sequential runs>]_:  number of sequential runs  +
 _[-p <JSON placholder file>]_:  JSON placeholder file  +
 _[--basedir <base directory>]_:  optional base directory  +
 _[--includedirs <include directory...>]_:  optional include directorys  +

|===
*The 'wf-integrate' command [[wf-integrate]]*
|===
|Command |Description

|wf-integrate <toolname> <workflow file> [--expose <ComponentName:OutputName:ExposedName,...>] [--expose-inputs <ComponentName:OutputName:ExposedName,...>] [--expose-outputs <ComponentName:OutputName:ExposedName,...>] [--verbose\|-v]|Integrate a workflow file as a component.  +

 _<toolname>_:  name for the tool  +
 _<workflow file>_:  workflow to be integrated  +
 _[--expose <ComponentName:OutputName:ExposedName,...>]_:  elements of the workflow to expose (see User Guide)  +
 _[--expose-inputs <ComponentName:OutputName:ExposedName,...>]_:  elements of the workflow to expose (see User Guide)  +
 _[--expose-outputs <ComponentName:OutputName:ExposedName,...>]_:  elements of the workflow to expose (see User Guide)  +
 _[--verbose\|-v]_:  enable verbose output  +

|===
